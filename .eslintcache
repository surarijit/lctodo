[{"/home/arijit/Projects/lctodo/src/index.js":"1","/home/arijit/Projects/lctodo/src/reportWebVitals.js":"2","/home/arijit/Projects/lctodo/src/App.js":"3"},{"size":500,"mtime":1610437731199,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1610437731199,"results":"6","hashOfConfig":"5"},{"size":2327,"mtime":1610477589386,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"vchl2c",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"10"},"/home/arijit/Projects/lctodo/src/index.js",[],["17","18"],"/home/arijit/Projects/lctodo/src/reportWebVitals.js",[],["19","20"],"/home/arijit/Projects/lctodo/src/App.js",["21"],"import React from  'react';\nimport logo from \"./logo.jpeg\";\nimport \"./App.css\";\n\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      newItem: \"\",\n      list : []\n    }\n  }\n\n  addItem(todoValue){\n    if(todoValue !== \"\"){\n      const newItem = {\n        id: Date.now(),\n        value: todoValue,\n        isDone: false\n      };\n      const list = [...this.state.list];\n      list.push(newItem);\n\n      this.setState({\n        list,\n        newItem: \"\"\n      });\n    }\n  }\n\n  deleteItem(id){\n    const list = [...this.state.list];\n    const updatedlist = list.filter(item => item.id !== id);\n    this.setState({list: updatedlist})\n  }\n\n  updateInput(input){\n    this.setState({newItem:input});\n  }\n\n  render(){\n    return(\n     <div>\n       <img src = {logo} width = \"100\" height = \"100\" className = \"logo\" />\n\n       <h1 className = \"app-title\">LCO TODO App</h1>\n       <div className = \"container\" >\n         Add an item... \n         <br />\n         <input type = \"text\"\n                className = \"input-text\"\n                placeholder=\"write a todo\"\n                required\n                value = {this.state.newItem}\n                onChange={e => this.updateInput(e.target.value)}\n                disabled={!this.state.newItem.length}\n         />\n         <button \n         className = \"add-btn\"\n         onClick={() =>this.addItem(this.state.newItem)}\n         > Add Todo</button>\n         <div className = \"list\">\n           <ul>\n             {this.state.list.map(item => {\n               return(\n                 <li key={item.id}>\n                   <input\n                   type =\"checkbox\"\n                   name =\"idDone\"\n                   checked={item.isDone}\n                    onChange={() => {}}\n                  />\n                  {item.value}\n                  <button\n                  className = \"btn\"\n                  onClick={() => this.deleteItem(item.id)} >\n                    Delete</button>\n                 </li>\n               );\n             })}\n             <li>\n                <input type = \"checkbox\" name = \"\" id = \"\" />\n                Record youtube videos\n                <button className = \"btn\">Delete</button>\n             </li>\n           </ul>\n         </div>\n       </div>\n     </div>\n    );\n  }\n}\n\nexport default App;",{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"22","replacedBy":"26"},{"ruleId":"24","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":46,"column":8,"nodeType":"30","endLine":46,"endColumn":76},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],["31"],["32"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]